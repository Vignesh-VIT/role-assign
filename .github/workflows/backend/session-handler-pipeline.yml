name: atlas-be-session-handler-ci-pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'backend/session_handler_service/**'

env:
  DOCKER_IMAGE_NAME: atlas/backend/session_handler_api
  PYTHON_VERSION: '3.11'

jobs:
  build-dev:
    name: Build-Dev
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Upgrade pip
        run: sudo python -m pip install --upgrade pip

      - name: Install requirements
        run: |
          python -m venv testenv
          source ./testenv/bin/activate
          pip install -r backend/session_handler_service/requirements.txt --no-cache-dir
          pip install --upgrade mdm-sdk-mdd==1.1.8 --extra-index-url "${{ secrets.PACE_ART_URL }}"
          pip install --upgrade dd-event-sdk --extra-index-url "${{ secrets.PACE_ART_URL }}"
          sudo apt-get update
          sudo apt-get install zip -y

      - name: Clean old test results
        run: |
          rm -f backend/results.xml
          rm -f backend/coverage.xml

      - name: Run tests and generate reports
        run: |
          source ./testenv/bin/activate
          pip install pytest==7.0.1 pytest-cov
          cd backend
          python -m pytest -v -c session_handler_service/pytest.ini \
            --cov-config=session_handler_service/.coveragerc \
            --junitxml=session_handler_service/results.xml \
            --cov=session_handler_service/. \
            --cov-report=xml \
            --cov-report=html
        continue-on-error: true

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results
          path: backend/session_handler_service/results.xml
          reporter: java-junit

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: backend/coverage.xml
          directory: backend/htmlcov
          flags: unittests
          name: codecov-umbrella

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry (Dev)
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DEV_ACR_REGISTRY }}
          username: ${{ secrets.DEV_ACR_USERNAME }}
          password: ${{ secrets.DEV_ACR_PASSWORD }}

      - name: Build and push Docker image (Dev)
        uses: docker/build-push-action@v5
        with:
          context: backend/
          file: backend/session_handler_service/Dockerfile.api
          push: true
          tags: |
            ${{ secrets.DEV_ACR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ secrets.DEV_ACR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
          build-args: |
            MDMARTURL=${{ secrets.PACE_ART_URL }}
            DD_WORKFLOW_GIT_URL=${{ secrets.DD_WORKFLOW_GIT }}

      - name: Clean up Docker images
        run: docker image prune -af

  deploy-dev:
    name: Deploy-Dev
    needs: build-dev
    runs-on: self-hosted
    
    steps:
      - name: Configure Git
        run: |
          git config --global user.email "git@bosch.com"
          git config --global user.name "GitHub Actions"

      - name: Update Kubernetes manifests
        run: |
          git clone -b main ${{ secrets.GITHUB_REPO_URL }}
          cd atlas-k8s-manifest/backend/overlays/dev/session_handler_service
          sed -i 's|image: crdlldev.azurecr.io/atlas/backend/session_handler_api.*|image: crdlldev.azurecr.io/atlas/backend/session_handler_api:${{ github.run_number }}|' session-handler-api.yaml
          git add .
          git commit -m "deployment no. ${{ github.run_number }}"
          git push origin HEAD:main

  # build-qa:
  #   name: Build-QA
  #   needs: deploy-dev
  #   runs-on: self-hosted
    
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Azure Container Registry (QA)
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ secrets.QA_ACR_REGISTRY }}
  #         username: ${{ secrets.QA_ACR_USERNAME }}
  #         password: ${{ secrets.QA_ACR_PASSWORD }}

  #     - name: Build and push Docker image (QA)
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: backend/
  #         file: backend/session_handler_service/Dockerfile.api
  #         push: true
  #         tags: |
  #           ${{ secrets.QA_ACR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
  #           ${{ secrets.QA_ACR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
  #         build-args: |
  #           MDMARTURL=${{ secrets.PACE_ART_URL }}
  #           DD_WORKFLOW_GIT_URL=${{ secrets.DD_WORKFLOW_GIT }}

  #     - name: Clean up Docker images
  #       run: docker image prune -af

  # deploy-qa:
  #   name: Deploy-QA
  #   needs: build-qa
  #   runs-on: self-hosted
    
  #   steps:
  #     - name: Configure Git
  #       run: |
  #         git config --global user.email "git@bosch.com"
  #         git config --global user.name "GitHub Actions"

  #     - name: Update Kubernetes manifests (QA)
  #       run: |
  #         git clone -b main ${{ secrets.GITHUB_REPO_URL }}
  #         cd atlas-k8s-manifest/backend/overlays/qa/session_handler_service
  #         sed -i 's|image: crdllqa.azurecr.io/atlas/backend/session_handler_api.*|image: crdllqa.azurecr.io/atlas/backend/session_handler_api:${{ github.run_number }}|' session-handler-api.yaml
  #         git add .
  #         git commit -m "deployment no. ${{ github.run_number }}"
  #         git push origin HEAD:main

  # build-prod:
  #   name: Build-PROD
  #   needs: deploy-qa
  #   runs-on: self-hosted
    
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Azure Container Registry (PROD)
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ secrets.PROD_ACR_REGISTRY }}
  #         username: ${{ secrets.PROD_ACR_USERNAME }}
  #         password: ${{ secrets.PROD_ACR_PASSWORD }}

  #     - name: Build and push Docker image (PROD)
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: backend/
  #         file: backend/session_handler_service/Dockerfile.api
  #         push: true
  #         tags: |
  #           ${{ secrets.PROD_ACR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
  #           ${{ secrets.PROD_ACR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
  #         build-args: |
  #           MDMARTURL=${{ secrets.PACE_ART_URL }}
  #           DD_WORKFLOW_GIT_URL=${{ secrets.DD_WORKFLOW_GIT }}

  #     - name: Clean up Docker images
  #       run: docker image prune -af

  # deploy-prod:
  #   name: Deploy-PROD
  #   needs: build-qa
  #   runs-on: self-hosted
    
  #   steps:
  #     - name: Configure Git
  #       run: |
  #         git config --global user.email "git@bosch.com"
  #         git config --global user.name "GitHub Actions"

  #     - name: Update Kubernetes manifests (PROD)
  #       run: |
  #         git clone -b main ${{ secrets.GITHUB_REPO_URL }}
  #         cd atlas-k8s-manifest/backend/overlays/prod/session_handler_service
  #         sed -i 's|image: crdllprod.azurecr.io/atlas/backend/session_handler_api.*|image: crdllprod.azurecr.io/atlas/backend/session_handler_api:${{ github.run_number }}|' session-handler-api.yaml
  #         git add .
  #         git commit -m "deployment no. ${{ github.run_number }}"
  #         git push origin HEAD:main